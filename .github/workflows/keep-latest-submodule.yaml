---
name: Keep latest submodule

#
# 'on' にしている理由
# yamllintで怒られるため
#
# 参考: https://github.com/adrienverge/yamllint/issues/430
#
'on':
  pull_request:
  workflow_dispatch:

jobs:
  keep-latest-submodule-for-dispatch:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3


  keep-latest-submodule-for-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3
        with:
          submodules: true ## サブモジュールも一緒に checkout (default: false)
      - name: debug
        run: |
          echo '---1'
          ls -al akiyadego-openapi
          echo '---2'
          ls -al .git/modules/akiyadego-openapi/
          echo '---3'
          echo 'skip'
          #cat .git/modules/akiyadego-openapi/ORIG_HEAD
          echo '---4'
          cat .git/modules/akiyadego-openapi/HEAD
          echo '---5'
          make git.pull-submodule
          echo '---6'
          ls -al akiyadego-openapi
          echo '---7'
          ls -al .git/modules/akiyadego-openapi/
          echo '---8'
          echo 'skip'
          #cat .git/modules/akiyadego-openapi/ORIG_HEAD
          echo '---9'
          cat .git/modules/akiyadego-openapi/HEAD

      - name: github-commentをインストール
        run: |
          curl -sSfL -o github-comment.tar.gz "https://github.com/suzuki-shunsuke/github-comment/releases/download/v${GITHUB_COMMENT_VERSION}/github-comment_${GITHUB_COMMENT_VERSION}_linux_amd64.tar.gz"
          echo 1da8cb9d52395018ec15f876347e204fe632c833baa1831ca36302dec1e0f97a  github-comment.tar.gz | sha256sum -c
          sudo tar -C /usr/bin -xzf ./github-comment.tar.gz
        env:
          GITHUB_COMMENT_VERSION: 5.0.0
      - name: 古いコメントを削除
        run: |
          github-comment hide -condition 'Comment.Body contains "make git.check-for-submodule-update"'
          github-comment hide -condition 'Comment.Body contains "make git.create-pr-for-submodule-updates"'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: submodule が最新版であるかチェック
        run: github-comment exec -- make git.check-for-submodule-updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: submodule が古いので PR を作成
        if: failure()
        run: github-comment exec -- make git.create-pr-for-submodule-updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CURRENT_BRANCH: ${{ github.head_ref }}
